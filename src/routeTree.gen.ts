/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout.index'
import { Route as LayoutIndexChatChatIdRouteImport } from './routes/_layout.index.chat.$chatId'

const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutIndexChatChatIdRoute = LayoutIndexChatChatIdRouteImport.update({
  id: '/index/chat/$chatId',
  path: '/index/chat/$chatId',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/': typeof LayoutIndexRoute
  '/index/chat/$chatId': typeof LayoutIndexChatChatIdRoute
}
export interface FileRoutesByTo {
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/': typeof LayoutIndexRoute
  '/index/chat/$chatId': typeof LayoutIndexChatChatIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/index/chat/$chatId': typeof LayoutIndexChatChatIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/settings' | '/sign-in' | '/' | '/index/chat/$chatId'
  fileRoutesByTo: FileRoutesByTo
  to: '/settings' | '/sign-in' | '/' | '/index/chat/$chatId'
  id:
    | '__root__'
    | '/_layout'
    | '/settings'
    | '/sign-in'
    | '/_layout/'
    | '/_layout/index/chat/$chatId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  SettingsRoute: typeof SettingsRoute
  SignInRoute: typeof SignInRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/index/chat/$chatId': {
      id: '/_layout/index/chat/$chatId'
      path: '/index/chat/$chatId'
      fullPath: '/index/chat/$chatId'
      preLoaderRoute: typeof LayoutIndexChatChatIdRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutIndexChatChatIdRoute: typeof LayoutIndexChatChatIdRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutIndexChatChatIdRoute: LayoutIndexChatChatIdRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  SettingsRoute: SettingsRoute,
  SignInRoute: SignInRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
